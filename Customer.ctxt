#BlueJ class context
comment0.params=ID\ t\ s
comment0.target=Customer(int,\ int,\ java.util.LinkedList)
comment0.text=\n\ Default\ constructor\ for\ the\ Customer\ class\n\ \n\ @param\ ID\ \ the\ unique\ identification\ number\ for\ an\ instance\ of\ the\ Customer\ class\n\ @param\ s\ \ the\ full\ list\ of\ stalla\ created\ at\ the\ market\ level.\n
comment1.params=s
comment1.target=void\ listGen(java.util.LinkedList)
comment1.text=\n\ Generates\ the\ list\ of\ needs\ based\ on\ the\ constants\ defined\ above.\n\ \n\ @param\ s\ \ the\ list\ of\ all\ stall\ generated\ at\ the\ market\ level\ used\ so\ they\ can\ be\ added\ to\ the\ customer's\n\ \ list\ of\ all\ the\ ones\ it\ needs\ to\ visit\n
comment2.params=
comment2.target=Line\ nextShortest()
comment2.text=\n\ Finds\ the\ next\ shortest\ line\ out\ of\ all\ the\ lines\ in\ all\ the\ stall\ currently\ in\ THIS\ customer's\ list\n\ \n\ @return\ the\ next\ shortest\ available\ line\ or\ null\ if\ no\ more\ lines\ are\ available\n
comment3.params=
comment3.target=boolean\ listComplete()
comment3.text=\n\ Checks\ if\ THIS\ customer\ has\ completed\ its\ list\ of\ needs\n\ \n\ @return\ \ a\ boolean\ value\ of\ it\ the\ needs\ have\ been\ filled\ or\ not\n
comment4.params=n
comment4.target=void\ fulfillNeed(java.lang.String)
comment4.text=\n\ Compares\ a\ given\ string\ to\ the\ types\ of\ stalls\ in\ a\ customer's\ list\ to\ find\ which\ one\ matches\ and\ \n\ remove\ it\ to\ "fulfill"\ that\ particular\ need.\n\ \n\ @param\ n\ \ the\ type\ of\ the\ stall\ that\ a\ need\ has\ been\ fulfilled\ from.\n
comment5.params=t
comment5.target=int\ setServeTime(int)
comment5.text=\n\ Simply\ set\ the\ serveTime\ of\ THIS\ customer\ to\ a\ randomly\ generated\ time\ for\ how\ long\ it\ will\ take\ for\ it\ to\n\ \ be\ served\ at\ any\ given\ stall.\n\ \n\ @param\ t\ \ an\ integer\ passed\ in\ from\ the\ a\ stall\ that\ is\ set\ as\ the\ new\ serveTime\n\ @return\ an\ integer\ that\ stores\ the\ value\ of\ how\ long\ it\ will\ take\ to\ serve\ THIS\ customer\ \n
comment6.params=
comment6.target=int\ getServeTime()
comment6.text=\n\ Simply\ provides\ access\ to\ THIS\ customer's\ randomly\ generated\ time\ for\ how\ long\ it\ will\ take\ for\ it\ to\ be\n\ \ served\ at\ any\ given\ stall.\n\ \n\ @return\ \ an\ integer\ that\ stores\ the\ value\ of\ how\ long\ it\ will\ take\ to\ serve\ THIS\ customer\n
comment7.params=l
comment7.target=Line\ moveLines(Line)
comment7.text=\n\ Takes\ a\ line\ as\ input\ and\ moves\ THIS\ customer\ to\ it,\ returing\ the\ new\ line.\n\ \n\ @param\ l\ the\ line\ that\ THIS\ customer\ will\ be\ moved\ to\n\ @return\ \ the\ line\ that\ THIS\ customer\ was\ moved\ to\ \n
comment8.params=stall
comment8.target=Stall\ moveStall(Stall)
comment8.text=\n\ Takes\ a\ stall\ object\ as\ input\ and\ "moves"\ THIS\ customer\ to\ it,\ then\ return\ the\ stall\ it\ was\ moved\ to.\n\ \n\ @param\ stall\ \ the\ stall\ that\ THIS\ customer\ will\ be\ moved\ to\n\ @raturn\ \ the\ stall\ that\ THIS\ customer\ was\ moved\ to\n
comment9.params=
comment9.target=java.lang.String\ info()
comment9.text=\n\ Simply\ compiles\ informaiton\ about\ a\ customer\ in\ order\ to\ make\ it\ usable\ as\ output\ to\ the\ console.\n\ \n\ @return\ the\ single\ string\ of\ all\ the\ infomration\n
numComments=10
