#BlueJ class context
comment0.params=b\ bL\ be\ beL\ d\ dL\ f\ fL\ m\ mL\ v\ vL
comment0.target=java.util.List\ runSim(int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int)
comment0.text=\n\ The\ main\ method\ for\ the\ whoel\ market.\ This\ is\ a\ big\ loop\ that\ counts\ up\ to\ the\ closing\ time\ of\ the\ \n\ market\ and\ calls\ the\ main\ functional\ methods\ of\ the\ stall\ and\ customer\ classes\ to\ actually\ 'run'\ the\n\ market\n\ \n\ @param\ bake\ \ the\ number\ of\ bakery\ stalls\n\ @param\ bakeL\ \ the\ number\ of\ line\ for\ each\ bakery\ stall\n\ @param\ bev\ \ the\ number\ of\ beverage\ stalls\n\ @param\ bevL\ \ the\ number\ of\ line\ for\ each\ beverage\ stall\n\ @param\ dairy\ \ the\ number\ of\ dairy\ stalls\n\ @param\ dairyL\ \ the\ number\ of\ line\ for\ each\ dairy\ stall\n\ @param\ fruit\ \ the\ number\ of\ fruit\ stalls\n\ @param\ fruitL\ \ the\ number\ of\ line\ for\ each\ fruit\ stall\n\ @param\ meat\ \ the\ number\ of\ meat\ stalls\n\ @param\ meatL\ \ the\ number\ of\ line\ for\ each\ meat\ stall\n\ @param\ vegi\ \ the\ number\ of\ vegetable\ stalls\n\ @param\ vegiL\ \ the\ number\ of\ line\ for\ each\ vegetable\ stall\n\ @return\ \ Returns\ a\ list\ of\ all\ the\ customers\ left\ in\ the\ market\ at\ closing\ time.\n
comment1.params=bake\ bakeL\ bev\ bevL\ dairy\ dairyL\ fruit\ fruitL\ meat\ meatL\ vegi\ vegiL
comment1.target=java.util.List\ addAll(int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int,\ int)
comment1.text=\n\ Adds\ all\ the\ stalls\ for\ the\ whole\ market\ based\ on\ \n\ \n\ @param\ bake\ \ the\ number\ of\ bakery\ stalls\n\ @param\ bakeL\ \ the\ number\ of\ line\ for\ each\ bakery\ stall\n\ @param\ bev\ \ the\ number\ of\ beverage\ stalls\n\ @param\ bevL\ \ the\ number\ of\ line\ for\ each\ beverage\ stall\n\ @param\ dairy\ \ the\ number\ of\ dairy\ stalls\n\ @param\ dairyL\ \ the\ number\ of\ line\ for\ each\ dairy\ stall\n\ @param\ fruit\ \ the\ number\ of\ fruit\ stalls\n\ @param\ fruitL\ \ the\ number\ of\ line\ for\ each\ fruit\ stall\n\ @param\ meat\ \ the\ number\ of\ meat\ stalls\n\ @param\ meatL\ \ the\ number\ of\ line\ for\ each\ meat\ stall\n\ @param\ vegi\ \ the\ number\ of\ vegetable\ stalls\n\ @param\ vegiL\ \ the\ number\ of\ line\ for\ each\ vegetable\ stall\n\ @return\ \ Returns\ a\ list\ of\ all\ the\ stalls\n
comment2.params=ID
comment2.target=Customer\ addCustomer(int)
comment2.text=\n\ Creates\ a\ new\ instance\ of\ the\ customer\ calss\ and\ passes\ in\ the\ necessary\ parameters\n\ \n\ @param\ ID\ \ is\ a\ value\ that\ becomes\ the\ instances\ unique\ ID\n\ @return\ \ Returns\ the\ customer\ that\ was\ just\ created\n
comment3.params=type\ n\ s\ d
comment3.target=Stall\ addStall(java.lang.String,\ int,\ int,\ int)
comment3.text=\n\ Creates\ a\ new\ instance\ of\ the\ stall\ calss\ and\ passes\ in\ the\ necessary\ parameters\n\ \n\ @param\ type\ \ is\ a\ string\ that\ defines\ the\ type\ the\ instance\ of\ the\ stall\ class\ will\ be\n\ @param\ s\ \ this\ value\ get\ used\ as\ the\ mean\ service\ time\ for\ the\ particular\ instance\ of\ the\ stall\ class\n\ @param\ d\ \ this\ value\ get\ used\ as\ the\ stdv\ service\ time\ for\ the\ particular\ instance\ of\ the\ stall\ class\n\ @return\ \ Returns\ the\ stall\ that\ was\ just\ created\n
numComments=4
